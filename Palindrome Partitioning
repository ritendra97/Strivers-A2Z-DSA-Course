class Solution {
   
    public void partitionUtil(String s,List<List<String>> ans,List<String> temp,int ind) {
    
        if(ind == s.length()){
            ans.add(new ArrayList<>(temp));
            return ;
        }
        
        for(int i=ind;i<s.length();++i){
            
            if(isPalindrome(s,ind,i)){
                
               temp.add(s.substring(ind,i+1)); 
               partitionUtil(s,ans,temp,i+1);
               temp.remove(temp.size()-1);
            }   
        }       
    }
               
    public List<List<String>> partition(String s) {
        
        List<List<String>> ans = new ArrayList<>();
        List<String> temp = new ArrayList<String>();
        partitionUtil(s,ans,temp,0);
        return ans;
    }
               
     boolean isPalindrome(String s, int start, int end) {
        while(start <= end) {
            if(s.charAt(start++) != s.charAt(end--))
                return false;
        }
        return true;
    }           
}
