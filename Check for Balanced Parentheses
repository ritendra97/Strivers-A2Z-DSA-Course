// { Driver Code Starts
import java.util.*;
import java.io.*;
import java.lang.*;

class Driverclass
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        
        //Reading total number of testcases
        int t= sc.nextInt();
        
        while(t-- >0)
        {
            //reading the string
            String st = sc.next();
            
            //calling ispar method of Paranthesis class 
            //and printing "balanced" if it returns true
            //else printing "not balanced"
            if(new Parenthesis().ispar(st) == true)
                System.out.println("balanced");
            else
                System.out.println("not balanced");
        
        }
    }
}// } Driver Code Ends


class Parenthesis
{
    // Function to return if the paranthesis are balanced or not
    static boolean ispar(String x)
    {
         Deque<Character> stack 
         = new ArrayDeque<Character>(); 
     for (int i = 0; i < x.length(); i++)  
     { 
         char ch = x.charAt(i); 

         if (ch == '(' || ch == '[' || ch == '{')  
         { 
             // Push the element in the stack 
             stack.push(ch); 
             continue; 
         } 
         if (stack.isEmpty()) 
             return false; 
         char check; 
         switch (ch) { 
         case ')': 
             check = stack.pop(); 
             if (check == '{' || check == '[') 
                 return false; 
             break; 

         case '}': 
             check = stack.pop(); 
             if (check == '(' || check == '[') 
                 return false; 
             break; 

         case ']': 
             check = stack.pop(); 
             if (check == '(' || check == '{') 
                 return false; 
             break; 
         } 
     } 
     return (stack.isEmpty());
    }
}
