package Greedy;

import java.util.Arrays;
import java.util.Comparator;

class Jobs {

    int id;
    int deadline;
    int profit;

    public Jobs(int x, int y, int z) {
        this.id = x;
        this.deadline = y;
        this.profit = z;
    }

}

public class JobSequencing {

    private static int Solution(int arr[][]) {

        int r = arr.length;

        int index = 0;

        Jobs[] Sorted = new Jobs[r];

        for (int row[] : arr) {
            int id = row[0];
            int deadline = row[1];
            int profit = row[2];
            Sorted[index++] = new Jobs(id, deadline, profit);
        }

        Arrays.sort(Sorted, new Comparator<Jobs>() {

            @Override
            public int compare(Jobs j1, Jobs j2) {
                if (j1.profit > j2.profit) {
                    return -1;
                } else if (j1.profit < j2.profit) {
                    return 1;
                } else {
                    return 0;
                }
            }
        });

        int result[] = new int[r];
        for (int i = 0; i < r; i++) {
            result[i] = -1;
        }
        int total_profit = 0;

        for (int i = 0; i < r; i++) {
            for (int j = Math.min(r, Sorted[i].deadline) - 1; j >= 0; j--) {
                if (result[j] == -1) {
                    result[j] = i;
                    total_profit += Sorted[i].profit;
                    break;
                }
            }
        }
        return total_profit;
    }

    public static void main(String[] args) {
        int[][] Jobs = {{1, 4, 20},
        {2, 1, 10},
        {3, 1, 40},
        {4, 1, 30}};

        System.err.println(Solution(Jobs));
    }
}
