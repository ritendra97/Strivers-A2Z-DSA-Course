import java.util.ArrayList;
import java.util.Comparator;
import java.util.PriorityQueue;

class data {
    int val;
    int row, col;

    data(int val, int row, int col) {
        this.val = val;
        this.row = row;
        this.col = col;
    }
}

public class MergeKsortedarrays {

    public static void main(String[] args) {

        int arr[][] = { { 1, 4, 5 },
                { 1, 3, 4 },
                { 2, 6 } };

        mergeKLists(arr);
    }

    public static void mergeKLists(int[][] arr) {

        ArrayList<Integer> res = new ArrayList<Integer>();
        PriorityQueue<data> minHeap = new PriorityQueue<>(new Comparator<data>() {
            public int compare(data d1, data d2) {
                return d1.val - d2.val;
            }
        });

        for (int i = 0; i < arr.length; i++) {
            minHeap.add(new data(arr[i][0], i, 0));
        }

        while (!minHeap.isEmpty()) {
            data d = minHeap.poll();
            res.add(d.val);
            if (d.col + 1 < arr[d.row].length) {
                minHeap.add(new data(arr[d.row][d.col + 1], d.row, d.col + 1));
            }
        }

        res.stream().forEach(System.out::println);
    }
}
