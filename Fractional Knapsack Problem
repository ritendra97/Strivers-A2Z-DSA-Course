package Greedy;

import java.util.Arrays;
import java.util.Comparator;

class Item{
    int value, weight;
    Item(int value, int weight){
        this.value = value;
        this.weight = weight;
    }
}

public class FractionalKnapsack {

    public static void main(String[] args){
        int[] wt = {10, 40, 20, 30};
        int[] val = {60, 40, 100, 120};
        int capacity = 50;
        System.out.println(fractionalKnapsack(wt, val, capacity));
    }

    private static int fractionalKnapsack(int[] wt, int[] val, int capacity) {

        int n = wt.length;
        Item[] item  = new Item[n];
        for(int i = 0; i<n; i++){
            item[i] = new Item(val[i], wt[i]);
        }
        Arrays.sort(item, new IntemComparator());

        double finalValue = 0;
        for(int i = 0;i<n;i++){
            if(item[i].weight <= capacity){
                capacity -= item[i].weight;
                finalValue += item[i].value;
            }else{
                finalValue += ((double)item[i].value/item[i].weight)*capacity;
                break;
            }
        }

        return (int)finalValue;
    }
}

class IntemComparator implements Comparator<Item> {
    public int compare(Item a, Item b){
        double r1 = (double)a.value/a.weight;
        double r2 = (double)b.value/b.weight;
        if(r1 < r2) return 1;
        else if(r1 > r2) return -1;
        else return 0;
    }
}
