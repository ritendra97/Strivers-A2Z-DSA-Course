package BinarySearchTree;

import java.util.LinkedList;
import java.util.Queue;

class Node{
    
    int val;
    Node left;
    Node right;
    Node next;

    Node(int data){
        this.val = data;
        this.left = null;
        this.right = null;
        this.next = null;
    }
}

public class PopulateNextRightpointersofTree {

    public static void main(String[] args) {
        
    }

    public static Node connect(Node root) {
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);

        while(!q.isEmpty()){
            int size = q.size();

            for(int i = 0;i<size;i++){

                Node node = q.poll();

                if(i+1<size){
                    node.next = q.peek();
                }

                if(node.left!=null){
                    q.add(node.left);
                }

                if(node.right!=null){
                    q.add(node.right);
                }
            }
        }
        
        return root;
    }

}
