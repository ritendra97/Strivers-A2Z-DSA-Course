package Array;

import java.util.Stack;

public class Largestrectangleinahistogram {

    public static void main(String[] args) {

        int heights[] = { 3, 5, 1, 7, 5, 9 };
        System.err.println(largestRectangleArea(heights));
    }

    public static int largestRectangleArea(int[] heights) {

        int n = heights.length;
        int ls[] = new int[n];
        int rs[] = new int[n];

        Stack<Integer> st = new Stack<>();
        st.push(n - 1);
        rs[n - 1] = n;

        for (int i = n - 2; i >= 0; i--) {

            while (!st.isEmpty() && heights[st.peek()] >= heights[i]) {
                st.pop();
            }

            if (st.isEmpty()) {
                rs[i] = n;
            } else {
                rs[i] = st.peek();
            }

            st.push(i);
        }

        st.clear();
        st.push(0);
        ls[0] = -1;
        for (int i = 1; i < n; i++) {

            while (!st.isEmpty() && heights[st.peek()] >= heights[i]) {
                st.pop();
            }

            if (st.isEmpty()) {
                rs[i] = -1;
            } else {
                rs[i] = st.peek();
            }

            st.push(i);
        }

        int max_area = Integer.MIN_VALUE;
        for (int i = 0; i < heights.length; i++) {
            int width = rs[i] - ls[i] - 1;
            int area = heights[i] * width;

            if (area > max_area) {
                max_area = area;
            }
        }

        return max_area;
    }

}
