//Symmetic Tree(Mirror image of itself)
class Node
{
	int val;
	Node left;
	Node right;
	Node(int val)
	{
		this.val=val;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root;
	public boolean ismirror(Node node1,Node node2)
	{
		if(node1==null && node2==null)
			return true;
		if (node1 != null && node2 != null && node1.val == node2.val)
	        return (ismirror(node1.left, node2.right) && ismirror(node1.right, node2.left));
		return false;
	}
	public boolean isSymmetic(Node root)
	{
		if(ismirror(root,root))
			return true;
		return false;
	}
	public static void main(String[] args) 
	{
		BinaryTree bt = new BinaryTree();
		bt.root=new Node(1);
        bt.root.left = new Node(2); 
        bt.root.right = new Node(2); 
        bt.root.left.left = new Node(3); 
        bt.root.left.right = new Node(4); 
        bt.root.right.left = new Node(4); 
        bt.root.right.right = new Node(3);
        System.out.println(bt.isSymmetic(bt.root));
	}
}
